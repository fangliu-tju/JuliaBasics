"""
This file contains a code example related to

Julia 程序设计基础
by Fang Liu
https://github.com/fangliu-tju/JuliaBasics/blob/master/scr/rotatepairs.jl

Copyright 2020 Fang Liu

License: http://creativecommons.org/licenses/by/4.0/
"""

"""
    rotatepairs(worddict, word)

Prints all words that can be generated by rotating word.

# Arguments

- `worddict`: dictionary with words as keys.
- `word`: string.
"""
function rotatepairs(worddict, word)
    for i in 1:14
        rotated = rotateword(word, i)
        rotated ∈ keys(worddict) && println("$word  $i  $rotated")
    end
end

"""
    makeworddict()

Read the words and return a dictionary that contains the words as keys
"""
function makeworddict()
    d = Dict()
    for line in eachline("./scr/CROSSWD.TXT")
        word = lowercase(strip(line))
        d[word] = nothing
    end
    return d
end

"""
    rotate_letter(letter, n)

Rotates a letter by n places.  Does not change other chars.

# Arguments

- `letter`: single-letter string
- `n`: int

Returns: single-letter string
"""
function rotate_letter(letter, n)
    if isuppercase(letter)
        start = Int('A')
    elseif islowercase(letter)
        start = Int('a')
    else
        return letter
    end

    c = Int(letter) - start
    i = mod((c+n), 26) + start
    return Char(i)
end

"""
    rotateword(word, n)

Rotates a word by n places.

# Arguments    
- `word`: string
- `n`: integer

Returns: string
"""
function rotateword(word, n)
    res = ""
    for letter in word
        res *= rotate_letter(letter, n)
    end
    return res
end


worddict = makeworddict();
for word in keys(worddict)
    rotatepairs(worddict, word)
end
